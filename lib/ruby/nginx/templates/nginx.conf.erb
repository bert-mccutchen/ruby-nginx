# Generic and overly simple NGINX configuration file for a web application.
# It's not great. If you want great, you should probably provide your own.
# https://www.digitalocean.com/community/tools/nginx

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

map $remote_addr $proxy_forwarded_elem {
    # IPv4 addresses can be sent as-is
    ~^[0-9.]+$        "for=$remote_addr";

    # IPv6 addresses need to be bracketed and quoted
    ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

    # Unix domain socket names cannot be represented in RFC 7239 syntax
    default           "for=unknown";
}

map $http_forwarded $proxy_add_forwarded {
  # If the incoming Forwarded header is syntactically valid, append to it
  "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

  # Otherwise, replace it
  default "$proxy_forwarded_elem";
}

upstream <%= name %> {
  server 127.0.0.1:<%= options[:port] %> fail_timeout=0;
}

server {
  listen                      80;
  server_name                 <%= options[:domain] %>;
  root                        <%= options[:root_path] %>;
  try_files $uri/index.html $uri @<%= name %>;

  <% if options[:ssl] %>
  # ssl
  <% if nginx_version >= Ruby::Nginx::Version.new("1.25.1") %>
  listen                      443 ssl;
  http2                       on;
  <% else %>
  listen                      443 ssl http2;
  <% end %>
  ssl_certificate             <%= options[:ssl_certificate_path] %>;
  ssl_certificate_key         <%= options[:ssl_certificate_key_path] %>;
  <% end %>

  <% if options[:log] %>
  # logging
  access_log                  <%= options[:access_log_path] %> combined buffer=512k flush=1m;
  error_log                   <%= options[:error_log_path] %> warn;
  <% end %>

  # reverse proxy
  location @<%= name %> {
    proxy_pass                         http://<%= name %>;
    proxy_http_version                 1.1;
    proxy_cache_bypass                 $http_upgrade;

    <% if options[:ssl] %>
    # proxy SSL
    proxy_ssl_server_name              on;
    <% end %>

    # proxy headers
    proxy_set_header                   Host $host;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header Forwarded         $proxy_add_forwarded;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;
  }

  # favicon.ico
  location = /favicon.ico {
    log_not_found off;
  }

  # robots.txt
  location = /robots.txt {
    log_not_found off;
  }

  # assets, media
  location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
    expires 7d;
  }

  # svg, fonts
  location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
    add_header Access-Control-Allow-Origin "*";
    expires    7d;
  }
}
